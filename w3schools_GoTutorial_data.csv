H1_leftside_heading,H1_rightside_heading,H2,H3,All_para,li,div,div_2
Go ,Tutorial,Examples in Each Chapter,Example,"Our ""Try it Yourself"" editor makes it easy to learn Go. You can edit Go code and view the result in your browser.",,,
Go Conditions,,Go Conditions,,"Conditional statements are used to perform different actions based on different conditions.,A condition can be either , or ,.,Go supports the usual , from mathematics:,Additionally, Go supports the usual ,:,You can use these operators or their combinations to create conditions for different decisions.,Go has the following conditional statements:","Less than ,Less than or equal ,Greater than ,Greater than or equal ,Equal to ,Not equal to ,Logical AND ,Logical OR ,Logical NOT ,Use , to specify a block of code to be executed, if a specified condition is true,Use , to specify a block of code to be executed, if the same condition is false,Use , to specify a new condition to test, if the first condition is false,Use , to specify many alternative blocks of code to be executed",,
Go Operators,,Go Operators,"Example,Example","Operators are used to perform operations on variables and values.,The , , adds together two values, like in the example below:,Although the , operator is often used to add together two values, it can also be used to add together a variable and a value, or a variable and another variable:,Go divides the operators into the following groups:",,,
Go ,Exercises,"Exercises,Count Your Score",,"You can test your Go skills with W3Schools' Exercises.,We have gathered a variety of Go exercises (with answers) for each Go Chapter.,Try to solve an exercise by editing some code, or show the answer to see what you've done wrong.,You will get 1 point for
each correct answer. Your score and total score will always be displayed.",,,
Go Slices,,"Go Slices,Create a Slice With [],{,},Create a Slice From an Array,Create a Slice With The make() Function","Syntax,Example,Syntax,Example,Syntax,Example","Slices are similar to arrays, but are more powerful and flexible.,Like arrays, slices are also used to store multiple values of the same type in a single variable.,However, unlike arrays, the length of a slice can grow and shrink as you see fit.,In Go, there are several ways to create a slice:,A common way of declaring a slice is like this:,The code above declares an empty slice of 0 length and 0 capacity.,To initialize the slice during declaration, use this:,The code above declares a slice of integers of length 3 and also the capacity of 
3.,In Go, there are two functions that can be used to return the length and 
capacity of a slice:,In the example above, we see that in the first slice (myslice1), the actual elements are not specified, 
so both the length and capacity of the 
slice will be zero. In the second slice (myslice2), the elements are specified, 
and both length and capacity is 
equal to the number of actual elements specified.,You can create a slice by slicing an array:,In the example above , is a slice with length 
2. It is made from , which is an array with length 6.,The slice starts from the second element of the array which has value 12. The slice can grow to the end of the array. This means that the capacity of the slice is 
4.
,If , started from element 0, the slice capacity would be 6.,The , function can also be used to 
create a slice.","Using the [],{,} format,Create a slice from an array,Using the make() function, function - returns the length 
  of the slice (the number of elements in the slice), function - returns the capacity of 
  the slice (the number of elements the slice can grow 
  or shrink to)",,
Go For Loops,,"Go for Loop,for Loop Examples,The continue Statement,The break Statement,Nested Loops,The Range Keyword","Syntax,Example 1,Example 2,Example,Example,Example,Syntax,Example,Example,Example","The , loop loops through a block of code a specified number of times.,The , loop is the only loop 
available in Go.,Loops are handy if you want to run the same code over and over again, each time with a different value.,Each execution of a loop is called an ,.,The , loop can take up to three statements:, Initializes the loop counter value., Evaluated for each loop iteration. If it evaluates to TRUE, the loop continues. If it evaluates to FALSE, the loop ends., Increases the loop counter value.,The , statement is used to skip one 
or more iterations in the loop. It then continues with the next iteration in the loop.,The , statement is used to break/terminate the loop execution.,It is possible to place a loop inside another loop.,Here, the ""inner loop"" will be executed one time for each iteration of the ""outer loop"":,The , keyword is used to more easily iterate 
over an array, slice or map. It returns both the index and the value.,The , keyword is used like this:, To only show the value or the index, you can omit the other output using an underscore (,).","i:=0; - Initialize the loop counter (i), and set the start value to 0,i < 5; - Continue the loop as long as i is less than 5,i++ - Increase the loop counter value by 1 for each iteration,i:=0; - Initialize the loop counter (i), and set the start value to 0,i <= 100; - Continue the loop as long as i is less than or equal to 100,i+=10 - Increase the loop counter value by 10 for each iteration",,
Go ,Compiler,"Go Compiler (Editor),Go Compiler Explained",,"With our online Go compiler, you can edit Go code, and view the result in your browser.,Click on the ""Try it Yourself"" button to see how it works.,The window to the left is editable - edit the code and click on the ""Run"" button to view the result in the right window.,The icons are explained in the table below:",,,
Go switch Statement,,"The switch Statement,Single-Case switch Syntax,Single-Case switch Example,The default Keyword","Syntax,Example,Example","Use the , statement to select one of many code blocks to be executed.,The , statement in Go is similar to the ones in C, C++, Java, JavaScript, and PHP. The difference is that it only runs the matched case so it does not need a , statement.,This is how it works:,The example below uses a weekday number to calculate the weekday name:,The , keyword specifies some code to run if there is no case match:,All the , values should have the same type as the , expression. Otherwise, the compiler will raise an error:","The expression is evaluated once,The value of the , expression is compared with the values of each ,If there is a match, the associated block of code is executed,The ,  keyword is optional. It 
specifies some code to run if there is no , 
match",,
Go Data Types,,Go Data Types,Example,"Data type is an important concept in programming. Data type specifies the size and type of variable values.,Go is statically typed, meaning that once a variable type is defined, it can only store data of that type.,Go has three basic data types:",": represents a boolean value and is either true or false,: represents integer types, floating point values, 
  and complex types,: represents a string value",,
Go Functions,,"Create a Function,Call a Function,Naming Rules for Go Functions","Syntax,Example,Example","A function is a block of statements that can be used repeatedly in a program.,A function will not execute automatically when a page loads.,A function will be executed by a call to the function.,To create (often referred to as declare) a function, do the following:,Functions are not executed immediately. They are ""saved for later use"", and will be executed when they are called.,In the example below, we create a function named ""myMessage()"". The opening 
curly brace ( { ) indicates the beginning of the function code, and the closing 
curly brace ( } ) indicates the end of the function. The function outputs ""I 
just got executed!"". To call the function, just write its name followed by two 
parentheses ():,A function can be called multiple times., Give the function a name that reflects what the 
function does!","Use the , keyword.,Specify a name for the function, followed by parentheses ().,Finally, add code that defines what the function should do, inside curly 
braces {}.,A function name must start with a letter,A function name can only contain alpha-numeric characters and underscores (,, ,, and , 
  ),Function names are case-sensitive,A function name cannot contain spaces,If the function name consists of multiple words, techniques introduced for , 
  can be used",,
Go Variables,,"Go Variable Types,Declaring (Creating) Variables,Variable Declaration With Initial Value,Variable Declaration Without Initial Value,Value Assignment After Declaration,Difference Between var and :=","Syntax,Syntax,Example,Example,Example,Example","Variables are containers for storing data values.,In Go, there are different , of variables, for example:,More about different variable types, will be explained in the , chapter.,In Go, there are two ways to declare a variable:,Use the , keyword, followed by variable name and type:, You always have to specify either , 
or , (or both).,Use the , sign, followed by the variable value:, In this case, the type of the variable is , from the value 
(means that the compiler decides the type of the variable, based on the value)., It is not possible to declare a variable using
  ,, without assigning a value to it.,If the value of a variable is known from the start, you can declare the variable and assign a value to it 
on one line:, The variable types of , and , is , from 
their values.,In Go, all variables are initialized. So, if you declare a variable without an initial value, 
its value will be set to the default value of its type: ,In this example there are 3 variables:,These variables are declared but they have not been assigned initial values.,By running the code, we can see that they already have the default values of their respective types:,It is possible to assign a value to a variable after it is declared. This is helpful for cases the value is not initially known.,There are some small differences between the , var ,:","- stores integers (whole numbers), such as 123 or -123,- stores floating point numbers, with decimals, such as 19.99 or -19.99, - stores text, such as ""Hello World"". String values are surrounded by double quotes,- stores values with two states: true or false, is , is , is ",,
Go Struct,,"Go Structures,Declare a Struct,Access Struct Members,Pass Struct as Function Arguments","Syntax,Example,Example,Example","A struct (short for structure) is used to create a collection of members of 
different data types, into a single variable.,While arrays are used to store multiple values of the same data type into a 
single variable, structs are used to store multiple values of different data 
types into a single variable.,A struct can be useful for grouping data together to create records.,To declare a structure in Go, use the , 
and , keywords:, Notice that the struct members above have different 
data types. , and , is of type string, while , and , is of type int.,To access any member of a structure, use the dot operator (.) between the 
structure variable name and the structure member:,You can also pass a structure as a function argument, like this:",,,
Go Arrays,,"Go Arrays,Declare an Array,Array Examples,Access Elements of an Array,Change Elements of an Array,Array Initialization,Initialize Only Specific Elements,Find the Length of an Array","Syntax,Syntax,Example,Example,Example,Example,Example,Example,Example,Example","Arrays are used to store multiple values of the same type in a single variable, instead of declaring separate variables for each value.,In Go, there are two ways to declare an array:,You can access a specific array element by referring to the index number.,In Go, array indexes start at 0. That means that [0] is the first element, [1] is the second element, etc.,You can also change the value of a specific array element by referring to the index number., If an array or one of its elements has not been initialized in the code, it 
is assigned the default value of its type., , The default value for int is 0, and the default value 
for string is """".,It is possible to initialize only specific elements in an array., The array above has 5 elements.,The , function is used to find the length of an array:"," means: assign , to array index , (second element)., means: assign , to 
array index , (third element).",,
Go Output Functions,,"The Print() Function,The Println() Function,The Printf() Function","Example,Example,Example,Example,Example,Example,Example","Go has three functions to output text:,The , function prints its arguments with their default format.,The , function is similar to , with the difference that 
a whitespace is added between the arguments, and a newline is added at the end:,The , function first formats its argument based on the given formatting 
verb and then prints them.,Here we will use two formatting verbs:"," is used to print the , 
  of the arguments, is used to print the , 
  of the arguments",,
Go Constants,,"Go Constants,Declaring a Constant,Constant Rules,Constant Types,Typed Constants,Untyped Constants,Constants: Unchangeable and Read-only,Multiple Constants Declaration","Syntax,Example,Example,Example,Example","If a variable should have a fixed value that cannot be changed, you can use the , keyword.,The , keyword declares the variable as ""constant"", which means 
that it is ,.,Here is an example of declaring a constant in Go:,There are two types of constants:,Typed constants are declared with a defined type:,Untyped constants are declared without a type:,When a constant is declared, it is not possible to change the value later:,Multiple constants can be grouped together into a block for readability:","Constant names follow the same naming rules as ,Constant names are usually written in uppercase letters (for easy identification and differentiation from variables),Constants can be declared both inside and outside of a function,Typed constants,Untyped constants",,
Go Comments,,"Go Comments,Go Single-line Comments,Go Multi-line Comments,Comment to Prevent Code Execution","Example,Example,Example,Example","A comment is a text that is ignored upon execution.,Comments can be used to explain the code, and to make it more readable.,Comments can also be used to prevent code execution when testing an alternative code.,Go supports single-line or multi-line comments.,Single-line comments start with two forward slashes (,).,Any text between , and the end of the line is ignored by the compiler (will not be executed).,The following example uses a single-line comment at the end of a code line:,Multi-line comments start with , and ends with ,.,Any text between , and , will be ignored by the compiler:,You can also use comments to prevent the code from being executed. ,The commented code can be saved for later reference and troubleshooting.",,,
Go ,Introduction,"What is Go?,What is Go Used For?,Why Use Go?,Go Compared to Python and C++,Get Started",,"This tutorial will teach you the basics of Go.,It is not necessary to have any prior programming experience.","Go is a cross-platform, open source programming language,Go can be used 
  to create high-performance applications,Go is a fast, statically typed, compiled language that feels like a 
  dynamically typed, interpreted language,Go was developed at Google by Robert Griesemer, Rob Pike, and Ken Thompson in 2007,Go's syntax is similar to C++,Web development (server-side),Developing network-based programs,Developing cross-platform enterprise applications,Cloud-native development,Go is fun and easy to learn,Go has fast run time and compilation time,Go supports concurrency,Go has memory management,Go works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc.),Compilation time refers to translating the code into an executable 
          program,Concurrency is performing multiple things out-of-order, or at the 
          same time, without affecting the final outcome,Statically typed means that the variable types are known at 
          compile time",,
Go ,Syntax,"Go Syntax,Go Statements,Go Compact Code","Example,Example,Example","A Go file consists of the following parts:,Look at the following code, to understand it better:, In Go, every program is part of a package. We define this using the , keyword. In this example, the program belongs to the , package., , lets us import files included in 
the , package., A blank line. Go ignores white space. Having white spaces in code makes it more readable., , is a function. Any code inside its curly brackets , will be executed., , is a function made available from the , package. It is used to output/print text. In our example it will output ""Hello World!"". , is a statement.,In Go, statements are separated by ending a line (hitting the Enter key) or by 
a semicolon "","". 
,Hitting the Enter key adds "","" to the end of the line implicitly (does not show up in the source code). ,The left curly bracket , cannot come at the start of a line.,Run the following code and see what happens:,You can write more compact code, like shown below (this is not recommended because it makes the code 
more difficult to read):","Package declaration,Import packages,Functions,Statements and expressions",,
Go Maps,,"Go Maps,Creating Maps Using , and ,Creating Maps Using Using ,Function:,Creating an Empty Map,Allowed Key Types,Allowed Value Types,Accessing Map Elements,Updating and Adding Map Elements ,Remove Element from Map,Check For Specific Elements in a Map,Maps Are References,Iterating Over Maps,Iterate Over Maps in a Specific Order","Syntax,Example,Syntax,Example,Syntax,Example,Syntax,Example,Syntax,Example,Syntax,Example,Syntax,Example,Example,Example,Example","Maps are used to store data values in key:value pairs.,Each element in a map is a key:value pair.,A map is an unordered and changeable collection that does not allow duplicates.,The length of a map is the number of its elements. You can find it using the , function.,The default value of a map is nil.,Maps hold references to an underlying hash table.,Go has multiple ways for creating maps.,There are two ways to create an empty map. One is by using the ,function and the other is by using the following syntax.,The map key can be of any data type for which the equality operator (,) is defined. These include:,Invalid key types are:,These types are invalid because the equality operator (,) is not defined for them.,The map values can be , type.,You can access map elements by:,Updating or adding an elements are done by:,Removing elements is done using the , function.,You can check if a certain key exists in a map using:,If you only want to check the existence of a certain key, you can use the blank identifier (,) in place of val.,In this example, we checked for existence of different keys in the map.,The key "","" does not exist in the map. So the value is an empty string ('').,The , variable is used to find out if the key exist or not. Because we would have got the same value if the value of the ""color"" key was empty. This is the case for ,.,Maps are references to hash tables.,If two map variables refer to the same hash table, changing the content of one variable affect the content of the other.,You can use , to iterate over maps.,Maps are unordered data structures. If you need to iterate over a map in a specific order, you must have a separate data structure that specifies that order. ","Booleans,Numbers,Strings,Arrays,Pointers,Structs,Interfaces (as long as the dynamic type supports equality),Slices,Maps,Functions",,
Go ,Getting Started,"Go Get Started,Go Install,Go Install IDE,Go Quickstart,Learning Go At W3Schools",helloworld.go,"To start using Go, you need two things:,There are many text editors and compilers to choose from. In this tutorial, we will use an IDE (see below).,You can find the relevant installation files at ,.,Follow the instructions related to your operating system. To check if Go was installed successfully, you can run the following command in a terminal window:,Which should show the version of your Go installation.,An IDE (Integrated Development Environment) is used to edit AND compile the code.,Popular IDE's include Visual Studio Code (VS Code), Vim, Eclipse, and Notepad. These are all free, and they can be used to both edit and debug Go code., Web-based IDE's can work as well, but functionality is limited.,We will use , in our tutorial, which we believe is a good place to start.,You can find the latest version of VS Code at ,.,Let's create our first Go program.,VS Code is now configured to use Go.,Open up a terminal window and type:,Do not worry if you do not understand why we type the above command. Just think of it as something that you always do, and that you will learn more about in a later chapter.,Create a new file (,). Copy and paste the following code and save the file as , (,):,Now, run the code: Open a terminal in VS Code and type:,! You have now written and executed your first Go program.,If you want to save the program as an executable, type and run:,When learning Go at W3Schools.com, you can use our ""Try it Yourself"" tool. It shows both the code and the result. This will make it easier for 
you to understand every part as we move forward:","A text editor, like VS Code, to write Go code,A compiler, like GCC, to translate the Go code into a language that the computer will understand,Launch the VS Code editor,Open the extension manager or alternatively, press ,In the search box, type ""go"" and hit enter,Find the Go extension by the GO team at Google and install the extension,After the installation is complete, open the command palette by pressing ,Run the , command,Select all the provided tools and click OK",,
